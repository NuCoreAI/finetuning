{"messages": [{"role": "system", "content": "You are a NuCore smart-home assistant. You convert the user\u2019s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\n\n## NuCore BASICS\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\nDevices are provided in a flattened format under DEVICE STRUCTURE.\nEach device begins with the label \"***Device***\" and may include:\n\n1. Properties: Real-time values such as status, temperature, brightness\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\n3. Sends Commands: Events emitted by the device\n4. Parameters: Attributes for commands \u2014 id, name, type, unit (UOM), precision, enum, or range\n\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\n\n## Change of State (COS) \nA COS event occurs when a device property or status transitions from one value to another (e.g., OFF \u2192 ON, Closed \u2192 Open, 72\u00b0F \u2192 73\u00b0F). It represents the moment of change, not the steady state.\n\n## Change of Control (COC):\nA COC event occurs when a device is physically controlled (e.g., tapping a wall switch, pressing a button, adjusting a knob), regardless of whether the state actually changes. It represents the act of human control, not just the resulting status.\n\n## When to Act\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\n\n\n## Output Format (strict)\n\nReturn only:\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\nand __END_NUCORE_ROUTINE__ as follows:\n\n__BEGIN_NUCORE_ROUTINE__\n{\n  \"routine\": {\n    \"id\": <int>,\n    \"name\": \"<descriptive name>\",\n    \"parent\": 0,\n    \"comment\": \"<optional>\",\n    \"if\": [ /* ordered flat Condition Tokens */ ],\n    \"then\": [ /* actions */ ],\n    \"else\": [ /* actions */ ],\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \n  }\n}\n__END_NUCORE_ROUTINE__\n\n\n- \"parent\" required (`0` = root)\n- \"if\" = flat ordered array of tokens (no nesting)\n- \"then\"/\"else\" = arrays of actions\n- \"value\" integer only; decimals via \"precision\"\n- \"reasoning\" is optional and must be IGNORED if requested \n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\n{\n  \"clarify\": \"The requested clarification content and question\",\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \n}\n__END_NUCORE_ROUTINE_CLARIFY__\n\n---\n\n**Condition Tokens**\n\n- COS (Change of State):\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\n- COC (Change of Control):\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\n- Schedules (13 forms, **exact syntax**):\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\n  2. `{ \"at\": { \"sunrise\": -900 } }`\n  3. `{ \"at\": { \"sunset\": 600 } }`\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\n    - Days string lowercase, canonical, no spaces\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\n\n- Logical operators\n{ \"and\": 1 }\n{ \"or\": 1 }\n{ \"(\": 1 }\n{ \")\": 1 }\nLogical operators mimic natural language flows and do not contain objects.\nWrite logical operators exactly as:\n{ \"(\": 1 } and { \")\": 1 }\nDo not escape parentheses. Only escape double quotes where JSON requires it.\n\n- Mathematical operators\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\n\nExamples:\n\n-- COS + Schedule + Price\n\"if\": [\n  { \"at\": { \"sunset\": 0 } },\n  { \"and\": 1 },\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\n  { \"and\": 1 },\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\n]\n\n\"if\": [\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\n  { \"and\": 1 },\n  { \"at\": { \"sunset\": 0 } },\n  { \"or\": 1 },\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\n]\n\n-- Grouped COS + COC + Weekly\n\"if\": [\n  { \"(\": 1 },\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\n    { \"or\": 1 },\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\n  { \")\": 1 },\n  { \"and\": 1 },\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\n]\n\n-- Multiple Groups, Mixed Triggers\n\"if\": [\n  { \"(\": 1 },\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\n    { \"and\": 1 },\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\n  { \")\": 1 },\n  { \"or\": 1 },\n  { \"at\": { \"sunrise\": 600 } },\n  { \"or\": 1 },\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\n]\n\n---\n\n**Actions**\n{\n  \"device\":\"<device id>\",\n  \"command\":\"<command name>\",\n  \"parameters\":[\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\n  ]\n}\n\n\n- Use device ID for device\n- Use correct UOM ID for uom\n- Commands must exist in device\u2019s `accepts` list\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\n\n---\n\n## CRITICAL RULES\n\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\n- Put reasoning inside the routine schema \n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\n- Remain minimal, structured, and consistent.\n- All other answers must be short, factual, and grounded.\n\n---"}, {"role": "user", "content": "DEVICE STRUCTURE:\n***Device***\nName: IR Button Y\nID: n009_irbutton_11c\nParent: eISY IR Controller [ID: n009_controller]\n  ***Properties***\n    State [id=ST]\n      Enum [uom id=25]\n        Idle [0]\n        Pressed [1]\n        Held [2]\n        Released [3]\n        Offline [4]\n  ***Send Commands***\n    Pressed [id=GV1]\n    Held [id=GV2]\n    Released [id=GV3]***Device***\nName: IR Button Z\nID: n009_irbutton_11d\nParent: eISY IR Controller [ID: n009_controller]\n  ***Properties***\n    State [id=ST]\n      Enum [uom id=25]\n        Idle [0]\n        Pressed [1]\n        Held [2]\n        Released [3]\n        Offline [4]\n  ***Send Commands***\n    Pressed [id=GV1]\n    Held [id=GV2]\n    Released [id=GV3]***Device***\nName: HarmonyHub Controller\nID: n010_harmonyctrl\n  ***Properties***\n    Node Server Connected [id=ST]\n      Enum [uom id=25]\n        Disconnected [0]\n        Connected [1]\n        Failed [2]\n    Hubs [id=GV3]\n      Range 0 to 1000 Unit Index [uom id=25]\n    Short Poll [id=GV5]\n      Range 0 to 1000 Unit Index [uom id=25]\n    Long Poll [id=GV6]\n      Range 0 to 1000 Unit Index [uom id=25]\n    Profile Status [id=GV7]\n      Enum [uom id=25]\n        Unitialized [0]\n        Not Sure [1]\n        Discovering Hubs [2]\n        Adding Nodes [3]\n        Building Profile [4]\n        Installing Profile [5]\n        Installed [6]\n        Write Profile Failed [7]\n        Install Profile Failed [8]\n        PyHarmony Discover Failed [9]\n        Out of Date [10]\n        Write profile.zip Failed [11]\n    Auto Discover [id=GV8]\n      Enum [uom id=25]\n        False [0]\n        True [1]\n    Activity Method [id=GV9]\n      Enum [uom id=25]\n        None [0]\n        Short Poll [1]\n        Callback [2]\n    Watch Hubs [id=GV10]\n      Enum [uom id=2]\n        False [0]\n        True [1]\n  ***Accept Commands***\n    Debug Level [id=SET_DEBUGMODE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            All [0]\n            Debug [10]\n            Info [20]\n            Warning [30]\n            Error [40]\n            Critical [50]\n    Short Poll [id=SET_SHORTPOLL]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1000 Unit Index [uom id=25]\n    Long Poll [id=SET_LONGPOLL]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1000 Unit Index [uom id=25]\n    Auto Discover Mode [id=SET_DI_MODE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            False [0]\n            True [1]\n    Activity Method [id=SET_ACTIVITY_METHOD]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            None [0]\n            Short Poll [1]\n            Callback [2]\n    Watch Hubs [id=SET_WATCH_MODE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=2]\n            False [0]\n            True [1]\n    Query [id=QUERY]\n    Discover [id=DISCOVER]\n    Purge Check [id=PURGE_CHECK]\n    Purge Execute [id=PURGE_EXECUTE]\n    Install Profile [id=INSTALL_PROFILE]\n    Update Profile [id=UPDATE_PROFILE]\n    Build Profile [id=BUILD_PROFILE]\n  ***Send Commands***\n    On [id=DON]\n    Off [id=DOF]\n\nUSER QUERY: When IR Button Y is pressed or released on weekdays between 09:00 and 17:00, run a Harmony discovery; if the button is held instead set the Harmony Activity Method to Callback. Otherwise do nothing."}, {"role": "assistant", "content": "__BEGIN_NUCORE_ROUTINE__\n{\n  \"routine\": {\n    \"id\": 101,\n    \"name\": \"Weekday IR Button Y: Discover on press/release, Callback on hold\",\n    \"parent\": 0,\n    \"comment\": \"Use IR Button Y COC events during weekdays 09:00-17:00\",\n    \"if\": [\n      { \"(\": 1 },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV1\" } },\n        { \"or\": 1 },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV3\" } },\n        { \"or\": 1 },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV2\" } },\n      { \")\": 1 },\n      { \"and\": 1 },\n      { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"09:00\", \"to\": { \"time\": \"17:00\" } } } }\n    ],\n    \"then\": [\n      { \"(\": 1 },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV1\" } },\n        { \"or\": 1 },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV3\" } },\n      { \")\": 1 },\n      {\n        \"device\": \"n010_harmonyctrl\",\n        \"command\": \"DISCOVER\"\n      },\n      {\n        \"(\": 1\n      },\n        { \"==\": { \"device\": \"n009_irbutton_11c\", \"control\": \"GV2\" } },\n        { \"and\": 1 },\n        {\n          \"device\": \"n010_harmonyctrl\",\n          \"command\": \"SET_ACTIVITY_METHOD\",\n          \"parameters\": [ { \"name\": \"n/a\", \"value\": 2, \"uom\": \"25\", \"precision\": 0 } ]\n        },\n      {\n        \")\": 1\n      }\n    ],\n    \"else\": [],\n    \"reasoning\": \"Group press/release and hold COC events from IR Button Y, restrict to weekdays 09:00-17:00. Press or release triggers a DISCOVER on the Harmony hub; hold triggers setting the Activity Method to Callback (value 2). Using COC (control GV1/GV3/GV2) avoids relying on state transitions.\"\n  }\n}\n__END_NUCORE_ROUTINE__"}]}
