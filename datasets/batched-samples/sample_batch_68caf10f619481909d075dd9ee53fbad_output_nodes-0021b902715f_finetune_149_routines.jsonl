{"messages": [{"role": "system", "content": "You are a NuCore smart-home assistant. You convert the user\u2019s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\n\n## NuCore BASICS\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\nDevices are provided in a flattened format under DEVICE STRUCTURE.\nEach device begins with the label \"***Device***\" and may include:\n\n1. Properties: Real-time values such as status, temperature, brightness\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\n3. Sends Commands: Events emitted by the device\n4. Parameters: Attributes for commands \u2014 id, name, type, unit (UOM), precision, enum, or range\n\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\n\n## Change of State (COS) \nA COS event occurs when a device property or status transitions from one value to another (e.g., OFF \u001e ON, Closed \u001e Open, 72\u0006F \u001e 73\u0006F). It represents the moment of change, not the steady state.\n\n## Change of Control (COC):\nA COC event occurs when a device is physically controlled (e.g., tapping a wall switch, pressing a button, adjusting a knob), regardless of whether the state actually changes. It represents the act of human control, not just the resulting status.\n\n## When to Act\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\n\n\n## Output Format (strict)\n\nReturn only:\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\nand __END_NUCORE_ROUTINE__ as follows:\n\n__BEGIN_NUCORE_ROUTINE__\n{\n  \"routine\": {\n    \"id\": <int>,\n    \"name\": \"<descriptive name>\",\n    \"parent\": 0,\n    \"comment\": \"<optional>\",\n    \"if\": [ /* ordered flat Condition Tokens */ ],\n    \"then\": [ /* actions */ ],\n    \"else\": [ /* actions */ ],\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \n  }\n}\n__END_NUCORE_ROUTINE__\n\n\n- \"parent\" required (`0` = root)\n- \"if\" = flat ordered array of tokens (no nesting)\n- \"then\"/\"else\" = arrays of actions\n- \"value\" integer only; decimals via \"precision\"\n- \"reasoning\" is optional and must be IGNORED if requested \n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\n{\n  \"clarify\": \"The requested clarification content and question\",\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \n}\n__END_NUCORE_ROUTINE_CLARIFY__\n\n---\n\n**Condition Tokens**\n\n- COS (Change of State):\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\n- COC (Change of Control):\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\n- Schedules (13 forms, **exact syntax**):\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\n  2. `{ \"at\": { \"sunrise\": -900 } }`\n  3. `{ \"at\": { \"sunset\": 600 } }`\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\n    - Days string lowercase, canonical, no spaces\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\n\n- Logical operators\n{ \"and\": 1 }\n{ \"or\": 1 }\n{ \"(\": 1 }\n{ \")\": 1 }\nLogical operators mimic natural language flows and do not contain objects.\nWrite logical operators exactly as:\n{ \"(\": 1 } and { \")\": 1 }\nDo not escape parentheses. Only escape double quotes where JSON requires it.\n\n- Mathematical operators\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\n\n---\n\n**Actions**\n{\n  \"device\":\"<device id>\",\n  \"command\":\"<command name>\",\n  \"parameters\":[\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\n  ]\n}\n\n\n- Use device ID for device\n- Use correct UOM ID for uom\n- Commands must exist in device\u2019s `accepts` list\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\n\n---\n\n## CRITICAL RULES\n\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\n- Put reasoning inside the routine schema \n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\n- Remain minimal, structured, and consistent.\n- All other answers must be short, factual, and grounded.\n\n---"}, {"role": "user", "content": "DEVICE STRUCTURE:\n***Device***\nName: Climate Info\nID: n040_climate9nf1241\nParent: Blue Speedo \ud83e\ude72 [ID: n040_controller]\n  ***Properties***\n    Cabin Temperature [id=ST]\n      Range -50 to 75 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n    Auto Conditioning [id=GV10]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    Cabin Preconditioning [id=GV11]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n  ***Accept Commands***\n    Cabin Temperature [id=CABINTEMP]\n        Parameter 1: name=Driver side Temp [id=driver]\n          Range 15 to 28 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n          Range 59 to 83 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n        Parameter 2: name=Passenger side Temp [id=passenger]\n          Range 15 to 28 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n    Max defrosting [id=DEFROST]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n***Device***\nName: Back of House\nID: n001_huegrp86\nParent: Hue - House 1 [ID: n001_huebridge]\n  ***Properties***\n    Status [id=ST]\n      Range 0 to 100 Unit % [uom id=51]\n  ***Accept Commands***\n    On [id=DON]\n    Fast On [id=DFON]\n    Set Temp and Brightness [id=SET_CTBR]\n        Parameter 1: name=Color Temperature [id=K]\n          Range 2000 to 6500 Unit Kelvin [uom id=26].\n        Parameter 2: name=Transition Time [id=D]\n          Range 0 to 540000 Unit millisecond [uom id=42].\n        Parameter 3: name=Brightness [id=BR]\n          Range 1 to 254 Unit Level [uom id=100].\n    Set Color [id=SET_COLOR]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Blue [4]\n    Set Brightness [id=SET_BRI]\n        Parameter 1: name=n/a [id=n/a]\n          Range 1 to 254 Unit Level [uom id=100].\n    Set Alert [id=SET_ALERT]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            None [1]\n***Device***\nName: Outlets\nID: n001_huegrp85\nParent: Hue - House 1 [ID: n001_huebridge]\n  ***Properties***\n    Status [id=ST]\n      Range 0 to 100 Unit % [uom id=51]\n  ***Accept Commands***\n    On [id=DON]\n    Fast On [id=DFON]\n\nUSER QUERY: When the cabin temperature rises above 25\u00b0C while Back of House lights are manually turned on, and only on weekdays between 09:00 and 17:00, set driver temperature to 20\u00b0C and enable max defrost; otherwise disable max defrost."}, {"role": "assistant", "content": "__BEGIN_NUCORE_ROUTINE__\n{\n  \"routine\": {\n    \"id\": 101,\n    \"name\": \"Weekday high cabin temp with BOH on -> set driver temp + defrost\",\n    \"parent\": 0,\n    \"comment\": \"When cabin gets hot >25C during weekdays and Back of House is turned on, set driver temp and enable defrost; otherwise disable defrost.\",\n    \"if\": [\n      { \">\": { \"device\": \"n040_climate9nf1241\", \"status\": \"ST\", \"value\": 250, \"uom\": \"4\", \"precision\": 1 } },\n      { \"and\": 1 },\n      { \"==\": { \"device\": \"n001_huegrp86\", \"control\": \"DON\" } },\n      { \"and\": 1 },\n      { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"09:00\", \"to\": { \"time\": \"17:00\" } } } }\n    ],\n    \"then\": [\n      {\n        \"device\": \"n040_climate9nf1241\",\n        \"command\": \"CABINTEMP\",\n        \"parameters\": [\n          { \"name\": \"driver\", \"value\": 200, \"uom\": \"4\", \"precision\": 1 }\n        ]\n      },\n      {\n        \"device\": \"n040_climate9nf1241\",\n        \"command\": \"DEFROST\",\n        \"parameters\": [\n          { \"name\": \"n/a\", \"value\": 1, \"uom\": \"25\", \"precision\": 0 }\n        ]\n      }\n    ],\n    \"else\": [\n      {\n        \"device\": \"n040_climate9nf1241\",\n        \"command\": \"DEFROST\",\n        \"parameters\": [\n          { \"name\": \"n/a\", \"value\": 0, \"uom\": \"25\", \"precision\": 0 }\n        ]\n      }\n    ],\n    \"reasoning\": \"Trigger when cabin temp (ST) exceeds 25.0\u0006C (value 250 with precision 1) AND Back of House is turned on (COC DON) AND it's a weekday 09:00-17:00. Then set driver side cabin temp to 20.0\u0006C via CABINTEMP (driver param value 200 precision 1) and enable DEFROST (enum 1). Else disable DEFROST (enum 0).\"\n  }\n}\n__END_NUCORE_ROUTINE__"}]}
