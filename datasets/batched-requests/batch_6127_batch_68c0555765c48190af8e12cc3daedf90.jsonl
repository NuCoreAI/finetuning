{"custom_id": "nodes-0021b9262626_finetune_1_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Oadr3 Controller\nID: n001_oadr3controlle\n  ***Properties***\n    Status [id=ST]\n      Range 0 to 1 Unit Index [uom id=25]\n        Disconnected [0]\n        Connected [1]\n  ***Accept Commands***\n    Discover [id=discover]\n    Query [id=x_query]***Device***\nName: Utility Signals (oadr3)\nID: n001_oadr3ven\nParent: Oadr3 Controller [ID: n001_oadr3controlle]\n  ***Properties***\n    Price [id=ST]\n      Range -10 to 10 Unit Dollars [uom id=103] (step of 0.001 and precision of 4).\n    GHG [id=GHG]\n      Range 0 to 1 Unit 2 Bytes (Unsigned) [uom id=108] (step of 0.01 and precision of 4).***Device***\nName: Ecobee Controller\nID: n002_controller\n  ***Properties***\n    NodeServer Online [id=ST]\n      Enum [uom id=25]\n        Disconnected [0]\n        Connected [1]\n        Failed [2]\n    Ecobee Connection Status [id=GV1]\n      Enum [uom id=2]\n        False [0]\n        True [1]\n    Authorized [id=GV3]\n      Enum [uom id=2]\n        False [0]\n        True [1]\n  ***Accept Commands***\n    Poll [id=POLL]\n    Query [id=QUERY]\n  ***Send Commands***\n    On [id=DON]\n    Off [id=DOF]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_2_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: ZB 24569.1 Main\nID: ZB24569_001_1***Device***\nName: [AV] Samsung Soundbar A4-Seri\nID: n005_0015830889bf\nParent: Bluetooth Service [ID: n005_btsvcctrl]\n  ***Properties***\n    Status [id=ST]\n      Range 0 to 1 Unit Index [uom id=25]\n        Unpaired [0]\n        Paired [1]\n  ***Accept Commands***\n    Pair [id=PAIR]\n    Unpair [id=UNPAIR]\n    Forget [id=FORGET]\n    Query [id=QUERY]***Device***\nName: Hue Light - Left\nID: ZB31965_011_1\n  ***Properties***\n    Status [id=ST]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n        Unknown [101]\n    On Level [id=OL]\n      Enum [uom id=51]\n        Off [0]\n        Previous [101]\n      Range 0 to 255 Unit Level [uom id=100]\n    Ramp Rate [id=RR]\n      Range 0 to 6553 Unit seconds [uom id=58]\n    Responding [id=ERR]\n      Enum [uom id=25]\n        True [0]\n        False [1]\n  ***Accept Commands***\n    On [id=DON]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=51]\n            Off [0]\n            Previous [101]\n          Range 0 to 255 Unit Level [uom id=100]\n        Parameter 2: name=Ramp Rate [id=RR]\n          Range 0 to 6553 Unit seconds [uom id=58]\n    Off [id=DOF]\n    Fast On [id=DFON]\n    Fast Off [id=DFOF]\n    Toggle [id=TOGGLE]\n    Brighten [id=BRT]\n    Dim [id=DIM]\n    On Level [id=OL]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=51]\n            Off [0]\n            Previous [101]\n          Range 0 to 255 Unit Level [uom id=100]\n    Ramp Rate [id=RR]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 6553 Unit seconds [uom id=58]\n    Identify [id=IDENTIFY]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 65535 Unit seconds [uom id=58]\n    Query [id=QUERY]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_3_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Color Hue Sat - Left\nID: ZB31965_011_106\nParent: Hue Light - Left [ID: ZB31965_011_1]\n  ***Properties***\n    Hue [id=ST]\n      Range 0 to 65534 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Saturation [id=GV1]\n      Range 0 to 1 Unit Raw [uom id=56] (step of 1 and precision of 3).\n    Enhanced Hue [id=GV2]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n  ***Accept Commands***\n    Move To [id=MOVETO]\n        Parameter 1: name=Hue [id=HUE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 2: name=Saturation [id=SAT]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move To Hue [id=MOVETOHUE]\n        Parameter 1: name=Hue [id=HUE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 2: name=Direction [id=DIR]\n          Range 0 to 3 Unit Index [uom id=25]\n            Shortest Distance [0]\n            Longest Distance [1]\n            Up [2]\n            Down [3]\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move To Saturation [id=MOVETOSAT]\n        Parameter 1: name=Saturation [id=SAT]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 2: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move Hue [id=MOVEHUE]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Rate [id=RATE]\n          Range 1 to 65535 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Move Saturation [id=MOVESAT]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Rate [id=RATE]\n          Range 1 to 255 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Step Hue [id=STEPHUE]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Step Size [id=SIZE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Step Saturation [id=STEPSAT]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Step Size [id=SIZE]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Stop [id=STOP]\n    Enhanced Hue [id=EHUE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=78]\n            Off [0]\n            On [100]\n    Query [id=QUERY]***Device***\nName: ZWave Switch\nID: ZY003_1\n  ***Properties***\n    Status [id=ST]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n        Unknown [101]\n    Responding [id=ERR]\n      Enum [uom id=25]\n        True [0]\n        False [1]\n  ***Accept Commands***\n    On [id=DON]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=78]\n            Off [0]\n            On [100]\n    Off [id=DOF]\n    Query [id=QUERY]\n    Set Configuration [id=CONFIG]\n        Parameter 1: name=Parameter Number [id=NUM]\n          Range 0 to 255 Unit 1 Byte (Unsigned) [uom id=107] (step of 1 and precision of 1).\n        Parameter 2: name=Parameter Value [id=VAL]\n          Range 0 to 255 Unit 1 Byte (Unsigned) [uom id=107]\n          Range 0 to 65535 Unit 2 Bytes (Unsigned) [uom id=108]\n          Range 0 to 4294967295 Unit 4 Bytes (Unsigned) [uom id=110]\n          Range -128 to 127 Unit 1 Byte [uom id=111]\n          Range -32768 to 32767 Unit 2 Byte [uom id=112]\n          Range -2147483648 to 214748647 Unit 4 Byte [uom id=114]\n    Write Changes [id=WDU]\n  ***Send Commands***\n    On [id=DON]\n    Off [id=DOF]***Device***\nName: AudioPlayer\nID: n004_0\n  ***Properties***\n    Playing Status [id=ST]\n      Range 0 to 1 Unit Index [uom id=25]\n        Idle [0]\n        Playing [1]\n    Playing [id=GV0]\n      Range 0 to 100 Unit Index [uom id=25]\n        None [0]\n        computer.mp3 [1]\n        harp.mp3 [2]\n        wchime.mp3 [3]\n        wind.mp3 [4]\n        chime.mp3 [5]\n        pa.mp3 [6]\n        hbell.mp3 [7]\n        synth.mp3 [8]\n        bells.mp3 [9]\n        malonc.mp3 [10]\n        mystical.mp3 [11]\n        fragment.mp3 [12]\n        rbell.mp3 [13]\n        example.mp3 [14]\n        fantasy.mp3 [15]\n        magic.mp3 [16]\n        chimes.mp3 [17]\n        schime.mp3 [18]\n        bells2.mp3 [19]\n        normal_t.mp3 [20]\n        high_t.mp3 [21]\n        moderate_t.mp3 [22]\n    Bluetooth [id=GV1]\n      Range 0 to 1 Unit Index [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    Output [id=GV2]\n      Range 0 to 1 Unit Index [uom id=25]\n        Speaker Jack [0]\n        Bluetooth [1]\n    Volume [id=GV3]\n      Range 0 to 100 Unit % [uom id=51]\n  ***Accept Commands***\n    Play [id=PLAY]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit Index [uom id=25]\n            None [0]\n            computer.mp3 [1]\n            harp.mp3 [2]\n            wchime.mp3 [3]\n            wind.mp3 [4]\n            chime.mp3 [5]\n            pa.mp3 [6]\n            hbell.mp3 [7]\n            synth.mp3 [8]\n            bells.mp3 [9]\n            malonc.mp3 [10]\n            mystical.mp3 [11]\n            fragment.mp3 [12]\n            rbell.mp3 [13]\n            example.mp3 [14]\n            fantasy.mp3 [15]\n            magic.mp3 [16]\n            chimes.mp3 [17]\n            schime.mp3 [18]\n            bells2.mp3 [19]\n            normal_t.mp3 [20]\n            high_t.mp3 [21]\n            moderate_t.mp3 [22]\n    Stop [id=STOP]\n    Output [id=OUTPUT]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1 Unit Index [uom id=25]\n            Speaker Jack [0]\n            Bluetooth [1]\n    Volume [id=VOLUME]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit % [uom id=51]\n    Remove [id=REMOVE]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit Index [uom id=25]\n            None [0]\n            computer.mp3 [1]\n            harp.mp3 [2]\n            wchime.mp3 [3]\n            wind.mp3 [4]\n            chime.mp3 [5]\n            pa.mp3 [6]\n            hbell.mp3 [7]\n            synth.mp3 [8]\n            bells.mp3 [9]\n            malonc.mp3 [10]\n            mystical.mp3 [11]\n            fragment.mp3 [12]\n            rbell.mp3 [13]\n            example.mp3 [14]\n            fantasy.mp3 [15]\n            magic.mp3 [16]\n            chimes.mp3 [17]\n            schime.mp3 [18]\n            bells2.mp3 [19]\n            normal_t.mp3 [20]\n            high_t.mp3 [21]\n            moderate_t.mp3 [22]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_4_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Bluetooth Service\nID: n005_btsvcctrl\n  ***Properties***\n    Status [id=ST]\n      Range 0 to 1 Unit Index [uom id=25]\n        Disabled [0]\n        Enabled [1]\n  ***Accept Commands***\n    Service [id=BT]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1 Unit Index [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Scan for Bluetooth Devices [id=SCAN]***Device***\nName: Ecobee - Office\nID: n002_t421800120477\n  ***Properties***\n    Temperature [id=ST]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Heat Setpoint [id=CLISPH]\n      Range 32 to 90 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n    Cool Setpoint [id=CLISPC]\n      Range 32 to 90 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n    Mode [id=CLIMD]\n      Enum [uom id=67]\n        Off [0]\n        Heat [1]\n        Cool [2]\n        Auto [3]\n        Aux/Emergency Heat [4]\n        Resume [5]\n        Fan Only [6]\n        Furnace [7]\n        Dry Air [8]\n        Moist Air [9]\n        Auto Changeover [10]\n        Energy Save Heat [11]\n        Energy Save Cool [12]\n        Away [13]\n        Program Auto [14]\n        Program Heat [15]\n        Program Cool [16]\n    Fan Mode [id=CLIFS]\n      Enum [uom id=68]\n        Auto [0]\n        On [1]\n    Humidity [id=CLIHUM]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    Heat/Cool State [id=CLIHCS]\n      Enum [uom id=25]\n        Idle [0]\n        Heat [1]\n        Cool [2]\n        Heat2 [3]\n        Heat3 [4]\n        Cool2 [5]\n        AuxHeat [6]\n        AuxHeat2 [7]\n        AuxHeat3 [8]\n    Fan State [id=CLIFRS]\n      Enum [uom id=80]\n        Off [0]\n        On [1]\n    Humidification Setpoint [id=GV1]\n      Range 10 to 100 Unit Relative Humidity [uom id=22] (step of 1 and precision of 1).\n    Schedule Mode [id=CLISMD]\n      Enum [uom id=25]\n        Running [0]\n        Hold Next [1]\n        Hold Indefinite [2]\n    Fan On Time [id=GV4]\n      Range 0 to 55 Unit Index [uom id=25] (step of 1 and precision of 1).\n    Climate Type [id=GV3]\n      Enum [uom id=25]\n        Away [0]\n        Home [1]\n        Sleep [2]\n        Smart1 [3]\n        Smart2 [4]\n        Smart3 [5]\n        Smart4 [6]\n        Smart5 [7]\n        Smart6 [8]\n        Smart7 [9]\n        Vacation [10]\n        SmartAway [11]\n        SmartHome [12]\n        DemandResponse [13]\n        Unknown [14]\n        Wakeup [15]\n    Dehumidification Setpoint [id=GV5]\n      Range 10 to 100 Unit Relative Humidity [uom id=22] (step of 1 and precision of 1).\n    Smart Home-Away [id=GV6]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    Follow Me [id=GV7]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    Connected [id=GV8]\n      Enum [uom id=2]\n        False [0]\n        True [1]\n    None [id=GV9]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    ECO+ [id=GV17]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n  ***Accept Commands***\n    Heat Setpoint [id=CLISPH]\n        Parameter 1: name=n/a [id=n/a]\n          Range 32 to 90 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n    Cool Setpoint [id=CLISPC]\n        Parameter 1: name=n/a [id=n/a]\n          Range 32 to 90 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n    Mode [id=CLIMD]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=67]\n            Off [0]\n            Heat [1]\n            Cool [2]\n            Auto [3]\n            Aux/Emergency Heat [4]\n            Resume [5]\n            Fan Only [6]\n            Furnace [7]\n            Dry Air [8]\n            Moist Air [9]\n            Auto Changeover [10]\n            Energy Save Heat [11]\n            Energy Save Cool [12]\n            Away [13]\n            Program Auto [14]\n            Program Heat [15]\n            Program Cool [16]\n    Schedule Mode [id=CLISMD]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Running [0]\n            Hold Next [1]\n            Hold Indefinite [2]\n    Humidification Setpoint [id=GV1]\n        Parameter 1: name=n/a [id=n/a]\n          Range 10 to 100 Unit Relative Humidity [uom id=22] (step of 1 and precision of 1).\n    Climate Type [id=GV3]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Away [0]\n            Home [1]\n            Sleep [2]\n            Smart1 [3]\n            Smart2 [4]\n            Smart3 [5]\n            Smart4 [6]\n            Smart5 [7]\n            Smart6 [8]\n            Smart7 [9]\n            Vacation [10]\n            SmartAway [11]\n            SmartHome [12]\n            DemandResponse [13]\n            Unknown [14]\n            Wakeup [15]\n        Parameter 2: name=Hold Type [id=HoldType]\n          Enum [uom id=25]\n            Running [0]\n            Hold Next [1]\n            Hold Indefinite [2]\n    Fan Mode [id=CLIFS]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=68]\n            Auto [0]\n            On [1]\n        Parameter 2: name=Hold Type [id=HoldType]\n          Enum [uom id=25]\n            Running [0]\n            Hold Next [1]\n            Hold Indefinite [2]\n    Fan On Time [id=GV4]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 55 Unit Index [uom id=25] (step of 1 and precision of 1).\n    Dehumidification Setpoint [id=GV5]\n        Parameter 1: name=n/a [id=n/a]\n          Range 10 to 100 Unit Relative Humidity [uom id=22] (step of 1 and precision of 1).\n    Smart Home-Away [id=GV6]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Follow Me [id=GV7]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Setpoint Up [id=BRT]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 10 Unit Degrees [uom id=14] (step of 1 and precision of 1).\n    Setpoint Down [id=DIM]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 10 Unit Degrees [uom id=14] (step of 1 and precision of 1).\n    Weather [id=GV9]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Backlight On Intensity [id=GV10]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=56]\n    Backlight Sleep Intensity [id=GV11]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=56]\n    ECO+ Setting [id=GV17]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Query [id=QUERY]***Device***\nName: Ecobee - Sensor\nID: n002_s421800120477\nParent: Ecobee - Office [ID: n002_t421800120477]\n  ***Properties***\n    Temperature [id=ST]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Humidity [id=CLIHUM]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    Occupancy [id=GV1]\n      Enum [uom id=25]\n        No [0]\n        Yes [1]\n        NA [2]\n    Responding [id=GV2]\n      Enum [uom id=2]\n        False [0]\n        True [1]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_5_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Ecobee - Weather\nID: n002_w421800120477\nParent: Ecobee - Office [ID: n002_t421800120477]\n  ***Properties***\n    Temperature [id=ST]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Humidity [id=GV1]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    POP [id=GV2]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    High Temp [id=GV3]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Low Temp [id=GV4]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    None [id=GV5]\n      Enum [uom id=48]\n    Wind Direction [id=GV6]\n      Enum [uom id=25]\n        N/A [0]\n        N [1]\n        NNE [2]\n        NE [3]\n        ENE [4]\n        E [5]\n        ESE [6]\n        SE [7]\n        SSE [8]\n        S [9]\n        SSW [10]\n        SW [11]\n        WSW [12]\n        W [13]\n        WNW [14]\n        NW [15]\n        NNW [16]\n    Sky [id=GV7]\n      Enum [uom id=25]\n        N/A [0]\n        Sunny [1]\n        Clear [2]\n        Mostly Sunny [3]\n        Mostly Clear [4]\n        Hazy Sunshine [5]\n        Haze [6]\n        Passing Clouds [7]\n        More Sun than Clouds [8]\n        Scattered Clouds [9]\n        Partly Cloudy [10]\n        A Mixture of Sun and CLouds [11]\n        High Level Clouds [12]\n        More Clouds than Sun [13]\n        Partly Sunny [14]\n        Broken Clouds [15]\n        Mostly Cloudy [16]\n        Cloudy [17]\n        Overcast [18]\n        Low Clouds [19]\n        Light Fog [20]\n        Fog [21]\n        Dense Fog [22]\n        Ice Fog [23]\n        Sandstorm [24]\n        Duststorm [25]\n        Increasing Cloudiness [26]\n        Decreasing Cloudiness [27]\n        Clearing Skies [28]\n        Breaks of Sun Late [29]\n        Early Fog Followed by Sunny Skies [30]\n        Afternoon Clouds [31]\n        Morning Couds [32]\n        Smoke [33]\n        Low Level Haze [34]\n    Symbol [id=GV8]\n      Enum [uom id=25]\n    Weather [id=GV9]\n      Enum [uom id=25]\n        Sunny [0]\n        Few Clouds [1]\n        Partly Cloudy [2]\n        Mostly Cloudy [3]\n        Overcast [4]\n        Drizzle [5]\n        Rain [6]\n        Freezing Rain [7]\n        Showers [8]\n        Hail [9]\n        Snow [10]\n        Flurries [11]\n        Freezing Snow [12]\n        Blizzard [13]\n        Pellets [14]\n        Thunderstorm [15]\n        Windy [16]\n        Tornado [17]\n        Fog [18]\n        Haze [19]\n        Smoke [20]\n        Dust [21]***Device***\nName: Ecobee - Forecast\nID: n002_f421800120477\nParent: Ecobee - Office [ID: n002_t421800120477]\n  ***Properties***\n    Temperature [id=ST]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Humidity [id=GV1]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    POP [id=GV2]\n      Range 0 to 100 Unit Relative Humidity [uom id=22]\n    High Temp [id=GV3]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    Low Temp [id=GV4]\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 0.5 and precision of 1).\n    None [id=GV5]\n      Enum [uom id=48]\n    Wind Direction [id=GV6]\n      Enum [uom id=25]\n        N/A [0]\n        N [1]\n        NNE [2]\n        NE [3]\n        ENE [4]\n        E [5]\n        ESE [6]\n        SE [7]\n        SSE [8]\n        S [9]\n        SSW [10]\n        SW [11]\n        WSW [12]\n        W [13]\n        WNW [14]\n        NW [15]\n        NNW [16]\n    Sky [id=GV7]\n      Enum [uom id=25]\n        N/A [0]\n        Sunny [1]\n        Clear [2]\n        Mostly Sunny [3]\n        Mostly Clear [4]\n        Hazy Sunshine [5]\n        Haze [6]\n        Passing Clouds [7]\n        More Sun than Clouds [8]\n        Scattered Clouds [9]\n        Partly Cloudy [10]\n        A Mixture of Sun and CLouds [11]\n        High Level Clouds [12]\n        More Clouds than Sun [13]\n        Partly Sunny [14]\n        Broken Clouds [15]\n        Mostly Cloudy [16]\n        Cloudy [17]\n        Overcast [18]\n        Low Clouds [19]\n        Light Fog [20]\n        Fog [21]\n        Dense Fog [22]\n        Ice Fog [23]\n        Sandstorm [24]\n        Duststorm [25]\n        Increasing Cloudiness [26]\n        Decreasing Cloudiness [27]\n        Clearing Skies [28]\n        Breaks of Sun Late [29]\n        Early Fog Followed by Sunny Skies [30]\n        Afternoon Clouds [31]\n        Morning Couds [32]\n        Smoke [33]\n        Low Level Haze [34]\n    Symbol [id=GV8]\n      Enum [uom id=25]\n    Weather [id=GV9]\n      Enum [uom id=25]\n        Sunny [0]\n        Few Clouds [1]\n        Partly Cloudy [2]\n        Mostly Cloudy [3]\n        Overcast [4]\n        Drizzle [5]\n        Rain [6]\n        Freezing Rain [7]\n        Showers [8]\n        Hail [9]\n        Snow [10]\n        Flurries [11]\n        Freezing Snow [12]\n        Blizzard [13]\n        Pellets [14]\n        Thunderstorm [15]\n        Windy [16]\n        Tornado [17]\n        Fog [18]\n        Haze [19]\n        Smoke [20]\n        Dust [21]***Device***\nName: Climate Info\nID: n007_climate5rf7219\nParent: Batmobile [ID: n007_controller]\n  ***Properties***\n    Cabin Temperature [id=ST]\n      Range -50 to 75 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Outdoor Temperature [id=GV2]\n      Range -50 to 75 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Driver Side Temp Setting [id=GV3]\n      Range -50 to 75 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Passenger Side Temp Setting [id=GV4]\n      Range -50 to 75 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n      Range -50 to 150 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Seat Heating - Front Left [id=GV5]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Front Right [id=GV6]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Rear Left [id=GV7]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Rear Middle [id=GV8]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Rear Right [id=GV9]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Third Left [id=GV15]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Seat Heating - Third Right [id=GV16]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n        Data Invalid [97]\n        98\n        Unknown/Not installed [99]\n    Auto Conditioning [id=GV10]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n        Max [2]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Cabin Preconditioning [id=GV11]\n      Enum [uom id=25]\n        Disabled [0]\n        Enabled [1]\n        Max [2]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Steering Wheel Heat [id=GV14]\n      Enum [uom id=25]\n        Off [0]\n        Low Heat [1]\n        Medium Heat [2]\n        Maximum Heat [3]\n    Time of car last update [id=GV19]\n      Enum [uom id=25]\n        Unknown [99]\n      Range 1737400000 to 9999999999 Unit Unix Timestamp [uom id=151]\n    Last Command Status [id=GV21]\n      Enum [uom id=25]\n        OK [0]\n        API Overload [1]\n        Offline [2]\n        Error [3]\n        Cmd Failed [4]\n        Data Invalid [97]\n        98\n        Unknown [99]\n  ***Accept Commands***\n    Sunroof Control [id=SUNROOF]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Close [0]\n            Vent [1]\n    Windows control [id=WINDOWS]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Close [0]\n            Vent [1]\n    Precondition Control [id=AUTOCON]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Cabin Temperature [id=CABINTEMP]\n        Parameter 1: name=Driver side Temp [id=driver]\n          Range 15 to 28 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n          Range 59 to 83 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n          Enum [uom id=25]\n            011\n            Data Invalid [97]\n            Not Enabled [98]\n            Not Reported [99]\n        Parameter 2: name=Passenger side Temp [id=passenger]\n          Range 15 to 28 Unit Celsius [uom id=4] (step of 0.5 and precision of 1).\n          Range 59 to 83 Unit Fahrenheit [uom id=17] (step of 1 and precision of 1).\n          Enum [uom id=25]\n            011\n            Data Invalid [97]\n            Not Enabled [98]\n            Not Reported [99]\n    Max defrosting [id=DEFROST]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disabled [0]\n            Enabled [1]\n    Seat Heating Level [id=SEAT]\n        Parameter 1: name=Seat Selection [id=seat]\n          Enum [uom id=25]\n            Front left [0]\n            Front right [1]\n            Rear left [2]\n            Rear left back [3]\n            Rear center [4]\n            Rear right [5]\n            Rear right back [6]\n            Third row left [7]\n            Third row right [8]\n        Parameter 2: name=Heat Level [id=heatlvl]\n          Enum [uom id=25]\n            Off [0]\n            Low Heat [1]\n            Medium Heat [2]\n            Maximum Heat [3]\n    Steering Wheel Heat Level [id=STEERINGW]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Off [0]\n            Low Heat [1]\n            Medium Heat [2]\n            Maximum Heat [3]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_6_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Charging Info\nID: n007_chargea5rf7219\nParent: Batmobile [ID: n007_controller]\n  ***Properties***\n    State of Charge [id=ST]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n      Range 0 to 100 Unit % [uom id=51]\n    Fast Charger [id=GV1]\n      Enum [uom id=25]\n        No [0]\n        Yes [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Charge Port [id=GV2]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Charger Port Latch [id=GV3]\n      Enum [uom id=25]\n        Disengaged [0]\n        Engaged [1]\n        Blocking [2]\n        SNA? [4]\n        Data Invalid [97]\n        98\n        Unknown/Not Connected [99]\n    Estimated Range [id=GV4]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 800 Unit Kilometer [uom id=83]\n      Range 0 to 500 Unit Miles [uom id=116]\n    Charge current requestmax [id=GV5]\n      Range 0 to 300 Unit Amps [uom id=1]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Charging State [id=GV6]\n      Enum [uom id=25]\n        Not Connected [0]\n        Connected [1]\n        Starting [2]\n        Charging [3]\n        Stopped [4]\n        Complete [5]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Charging Requested [id=GV7]\n      Enum [uom id=25]\n        Pending [0]\n        Requested [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Charging Power [id=GV8]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 300 Unit Kilowatts [uom id=30]\n    Battery Charge Target [id=GV9]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n      Range 0 to 100 Unit % [uom id=51]\n    Charger voltage [id=GV10]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 800 Unit Volts [uom id=72]\n    Charge current request [id=GV11]\n      Range 0 to 300 Unit Amps [uom id=1]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Charger actual current [id=GV12]\n      Range 0 to 300 Unit Amps [uom id=1]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n    Time to full charge [id=GV14]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 44640 Unit Minute [uom id=44]\n    Charge energy added [id=GV15]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 300 Unit kWh [uom id=33]\n    Time of car last update [id=GV19]\n      Enum [uom id=25]\n        Unknown [99]\n      Range 1737400000 to 9999999999 Unit Unix Timestamp [uom id=151]\n    Last Command Status [id=GV21]\n      Enum [uom id=25]\n        OK [0]\n        API Overload [1]\n        Offline [2]\n        Error [3]\n        Cmd Failed [4]\n        Data Invalid [97]\n        98\n        Unknown [99]\n  ***Accept Commands***\n    Charge Port Control [id=CHARGEPORT]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Close [0]\n            Open [1]\n    Charging Control [id=CHARGECTRL]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Stop [0]\n            Start [1]\n    Set Battery Charge Target [id=BATPERCENT]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit % [uom id=51]\n    Set Max Charge Current [id=CHARGEAMPS]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 300 Unit Amps [uom id=1]***Device***\nName: YouTube Player\nID: n006_ytsvc\n  ***Properties***\n    Playing Status [id=ST]\n      Range 0 to 1 Unit Index [uom id=25]\n        Idle [0]\n        Playing [1]\n    Playing [id=GV0]\n      Range 0 to 100 Unit Index [uom id=25]\n        None [0]\n        Religious [1]\n        Sky and Sabzi [2]\n        Farsi [3]\n        Uncle Nader [4]\n        Classical [5]\n        Vocal [6]\n        Opera [7]\n        Mine [8]\n        Sia [9]\n        Home Friends [10]\n        Hebrew [11]\n        Pop [12]\n        Shmu Music [13]\n        Friends [14]\n        bm [15]\n        Instrumental [16]\n        Favorites [17]\n        Euro [18]\n        Maman [19]\n    Bluetooth [id=GV1]\n      Range 0 to 1 Unit Index [uom id=25]\n        Disabled [0]\n        Enabled [1]\n    Output [id=GV2]\n      Range 0 to 1 Unit Index [uom id=25]\n        Speaker Jack [0]\n        Bluetooth [1]\n    Volume [id=GV3]\n      Range 0 to 100 Unit % [uom id=51]\n    Shuffle [id=GV4]\n      Range 0 to 1 Unit Index [uom id=25]\n        No [0]\n        Yes [1]\n  ***Accept Commands***\n    Play [id=PLAY]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit Index [uom id=25]\n            None [0]\n            Religious [1]\n            Sky and Sabzi [2]\n            Farsi [3]\n            Uncle Nader [4]\n            Classical [5]\n            Vocal [6]\n            Opera [7]\n            Mine [8]\n            Sia [9]\n            Home Friends [10]\n            Hebrew [11]\n            Pop [12]\n            Shmu Music [13]\n            Friends [14]\n            bm [15]\n            Instrumental [16]\n            Favorites [17]\n            Euro [18]\n            Maman [19]\n    Shuffle [id=SHUFFLE]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1 Unit Index [uom id=25]\n            No [0]\n            Yes [1]\n    Previous [id=PREVIOUS]\n    Stop [id=STOP]\n    Next [id=NEXT]\n    Output [id=OUTPUT]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 1 Unit Index [uom id=25]\n            Speaker Jack [0]\n            Bluetooth [1]\n    Volume [id=VOLUME]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 100 Unit % [uom id=51]***Device***\nName: Color XY - Left\nID: ZB31965_011_108\nParent: Hue Light - Left [ID: ZB31965_011_1]\n  ***Properties***\n    Color X [id=GV0]\n      Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Color Y [id=GV1]\n      Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Color Temperature K [id=GV2]\n      Range 0 to 1 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n    Color Temperature Mired [id=GV3]\n      Range 0 to 1 Unit Mired [uom id=152] (step of 1 and precision of 1).\n    Preferred Units [id=GV4]\n      Enum [uom id=25]\n        Kelvin [0]\n        Mired [1]\n  ***Accept Commands***\n    Move To XY [id=MOVETOXY]\n        Parameter 1: name=X [id=X]\n          Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 2: name=Y [id=Y]\n          Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move XY [id=MOVEXY]\n        Parameter 1: name=Rate X [id=RATEX]\n          Range -32768 to 32767 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n        Parameter 2: name=Rate Y [id=RATEY]\n          Range -32768 to 32767 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n    Step XY [id=STEPXY]\n        Parameter 1: name=Step X [id=STEPX]\n          Range -1 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 2: name=Step Y [id=STEPY]\n          Range -1 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Move To Temperature [id=MOVETOCT]\n        Parameter 1: name=Color [id=COLOR]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move Temperature [id=MOVECT]\n        Parameter 1: name=Min [id=MIN]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Max [id=MAX]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 3: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 4: name=Rate [id=RATE]\n          Range 0 to 65535 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n    Step Temperature [id=STEPCT]\n        Parameter 1: name=Min [id=MIN]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Max [id=MAX]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 3: name=Step Size [id=SIZE]\n          Range 0 to 1000000 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 4: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 5: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Preferred Units [id=UNITS]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Kelvin [0]\n            Mired [1]\n    Stop [id=STOP]\n    Query [id=QUERY]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_7_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Hue Light - Right\nID: ZB24569_011_1\n  ***Properties***\n    Status [id=ST]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n        Unknown [101]\n    On Level [id=OL]\n      Enum [uom id=51]\n        Off [0]\n        Previous [101]\n      Range 0 to 255 Unit Level [uom id=100]\n    Ramp Rate [id=RR]\n      Range 0 to 6553 Unit seconds [uom id=58]\n    Responding [id=ERR]\n      Enum [uom id=25]\n        True [0]\n        False [1]\n  ***Accept Commands***\n    On [id=DON]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=51]\n            Off [0]\n            Previous [101]\n          Range 0 to 255 Unit Level [uom id=100]\n        Parameter 2: name=Ramp Rate [id=RR]\n          Range 0 to 6553 Unit seconds [uom id=58]\n    Off [id=DOF]\n    Fast On [id=DFON]\n    Fast Off [id=DFOF]\n    Toggle [id=TOGGLE]\n    Brighten [id=BRT]\n    Dim [id=DIM]\n    On Level [id=OL]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=51]\n            Off [0]\n            Previous [101]\n          Range 0 to 255 Unit Level [uom id=100]\n    Ramp Rate [id=RR]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 6553 Unit seconds [uom id=58]\n    Identify [id=IDENTIFY]\n        Parameter 1: name=n/a [id=n/a]\n          Range 0 to 65535 Unit seconds [uom id=58]\n    Query [id=QUERY]***Device***\nName: Color Hue Sat - Right\nID: ZB24569_011_106\nParent: Hue Light - Right [ID: ZB24569_011_1]\n  ***Properties***\n    Hue [id=ST]\n      Range 0 to 65534 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Saturation [id=GV1]\n      Range 0 to 1 Unit Raw [uom id=56] (step of 1 and precision of 3).\n    Enhanced Hue [id=GV2]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n  ***Accept Commands***\n    Move To [id=MOVETO]\n        Parameter 1: name=Hue [id=HUE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 2: name=Saturation [id=SAT]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move To Hue [id=MOVETOHUE]\n        Parameter 1: name=Hue [id=HUE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 2: name=Direction [id=DIR]\n          Range 0 to 3 Unit Index [uom id=25]\n            Shortest Distance [0]\n            Longest Distance [1]\n            Up [2]\n            Down [3]\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move To Saturation [id=MOVETOSAT]\n        Parameter 1: name=Saturation [id=SAT]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 2: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move Hue [id=MOVEHUE]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Rate [id=RATE]\n          Range 1 to 65535 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Move Saturation [id=MOVESAT]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Rate [id=RATE]\n          Range 1 to 255 Unit Raw [uom id=56] (step of 1 and precision of 1).\n    Step Hue [id=STEPHUE]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Step Size [id=SIZE]\n          Range 0 to 360 Unit Hue Degree [uom id=149]\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Step Saturation [id=STEPSAT]\n        Parameter 1: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 2: name=Step Size [id=SIZE]\n          Range 0 to 100 Unit % [uom id=51] (step of 1 and precision of 1).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Stop [id=STOP]\n    Enhanced Hue [id=EHUE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=78]\n            Off [0]\n            On [100]\n    Query [id=QUERY]***Device***\nName: Color XY - Right\nID: ZB24569_011_108\nParent: Hue Light - Right [ID: ZB24569_011_1]\n  ***Properties***\n    Color X [id=GV0]\n      Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Color Y [id=GV1]\n      Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Color Temperature K [id=GV2]\n      Range 0 to 1 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n    Color Temperature Mired [id=GV3]\n      Range 0 to 1 Unit Mired [uom id=152] (step of 1 and precision of 1).\n    Preferred Units [id=GV4]\n      Enum [uom id=25]\n        Kelvin [0]\n        Mired [1]\n  ***Accept Commands***\n    Move To XY [id=MOVETOXY]\n        Parameter 1: name=X [id=X]\n          Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 2: name=Y [id=Y]\n          Range 0 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 3: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move XY [id=MOVEXY]\n        Parameter 1: name=Rate X [id=RATEX]\n          Range -32768 to 32767 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n        Parameter 2: name=Rate Y [id=RATEY]\n          Range -32768 to 32767 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n    Step XY [id=STEPXY]\n        Parameter 1: name=Step X [id=STEPX]\n          Range -1 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n        Parameter 2: name=Step Y [id=STEPY]\n          Range -1 to 1 Unit Color [uom id=153] (step of 1 and precision of 5).\n    Move To Temperature [id=MOVETOCT]\n        Parameter 1: name=Color [id=COLOR]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Move Temperature [id=MOVECT]\n        Parameter 1: name=Min [id=MIN]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Max [id=MAX]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 3: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Stop [0]\n            Up [1]\n            Down [3]\n        Parameter 4: name=Rate [id=RATE]\n          Range 0 to 65535 Unit Steps / Second [uom id=154] (step of 1 and precision of 1).\n    Step Temperature [id=STEPCT]\n        Parameter 1: name=Min [id=MIN]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 2: name=Max [id=MAX]\n          Range 2000 to 6535 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 3: name=Step Size [id=SIZE]\n          Range 0 to 1000000 Unit Kelvin [uom id=26] (step of 1 and precision of 1).\n        Parameter 4: name=Mode [id=MODE]\n          Enum [uom id=25]\n            Up [1]\n            Down [3]\n        Parameter 5: name=Duration [id=DUR]\n          Range 0 to 6553 Unit seconds [uom id=58] (step of 1 and precision of 1).\n    Preferred Units [id=UNITS]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Kelvin [0]\n            Mired [1]\n    Stop [id=STOP]\n    Query [id=QUERY]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
{"custom_id": "nodes-0021b9262626_finetune_8_routines", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4.1-mini", "temperature": 0.0, "messages": [{"role": "system", "content": "You are a samples generator that generates training samples for NuCore SmartHome Technology in OpenAI chat fine-tuning JSONL (one line per sample).\n\nThe output format for each sample must strictly adhere to ChatML format for training:\n\n{\"messages\":[\n  {\"role\":\"system\",\"content\":\"You are a NuCore smart-home assistant. You convert the user’s request into one or more NuCore routines based on the provided DEVICE STRUCTURE.\\n\\n## NuCore BASICS\\nNuCore is a platform for managing and automating smart devices through structured commands and logic.\\nDevices are provided in a flattened format under DEVICE STRUCTURE.\\nEach device begins with the label \"***Device***\" and may include:\\n\\n1. Properties: Real-time values such as status, temperature, brightness\\n2. Accepts Commands: Actions that can be sent to the device (e.g., DON, DOF)\\n3. Sends Commands: Events emitted by the device\\n4. Parameters: Attributes for commands — id, name, type, unit (UOM), precision, enum, or range\\n\\nNOTE: Device boundaries are defined by the \"***Device***\" labels. Never mix properties or commands across devices.\\n\\n## When to Act\\nWhen the user asks for automated and optimized behavior. Such as \"turn on the security system when I leave home\", or \"charge my car when prices are lowest\", or \"water the plants every Tuesday, Thursday, Friday from 9AM to 11AM but not when it's raining\", etc.\\n\\n\\n## Output Format (strict)\\n\\nReturn only:\\nOne or more fenced NuCore routine blocks (no prose between blocks). Each block is embedded between __BEGIN_NUCORE_ROUTINE__\\nand __END_NUCORE_ROUTINE__ as follows:\\n\\n__BEGIN_NUCORE_ROUTINE__\\n{\\n  \"routine\": {\\n    \"id\": <int>,\\n    \"name\": \"<descriptive name>\",\\n    \"parent\": 0,\\n    \"comment\": \"<optional>\",\\n    \"if\": [ /* ordered flat Condition Tokens */ ],\\n    \"then\": [ /* actions */ ],\\n    \"else\": [ /* actions */ ],\\n    \"reasoning\": \"<assistant's reasoning for the structure and semantics of this routine>\" \\n  }\\n}\\n__END_NUCORE_ROUTINE__\\n\\n\\n- \"parent\" required (`0` = root)\\n- \"if\" = flat ordered array of tokens (no nesting)\\n- \"then\"/\"else\" = arrays of actions\\n- \"value\" integer only; decimals via \"precision\"\\n- \"reasoning\" is optional and must be IGNORED if requested \\n- If the request is ambiguous, follow up with a CLARIFY stucture as defined below\\n__BEGIN_NUCORE_ROUTINE_CLARIFY__\\n{\\n  \"clarify\": \"The requested clarification content and question\",\\n  \"reasoning\": \"optional clear, concise, and contextal reasoning generated by the assistant.\" \\n}\\n__END_NUCORE_ROUTINE_CLARIFY__\\n\\n---\\n\\n**Condition Tokens**\\n\\n- COS (Change of State):\\n  { \">=\": { \"device\":\"13 18 26_1\",\"status\":\"ST\",\"value\":7500,\"uom\":\"17\",\"precision\":2 } }\\n- COC (Change of Control):\\n  { \"==\": { \"device\":\"18 18 18\",\"control\":\"DFON\",\"parameters\":[{ \"name\":\"tapCount\",\"value\":2,\"uom\":\"108\",\"precision\":0 }] } }\\n- Schedules (13 forms, **exact syntax**):\\n  1. `{ \"at\": { \"time\": \"13:00\" } }`\\n  2. `{ \"at\": { \"sunrise\": -900 } }`\\n  3. `{ \"at\": { \"sunset\": 600 } }`\\n  4. `{ \"from\": { \"sunrise\": 0, \"for\": { \"hours\":1,\"minutes\":30,\"seconds\":0 } } }`\\n  5. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0 } } }`\\n  6. `{ \"from\": { \"sunrise\": 0, \"to\": { \"sunset\": 0, \"day\":1 } } }`\\n  7. `{ \"from\": { \"time\":\"13:00\",\"to\":{ \"sunset\":0,\"day\":1 } } }`\\n  8. `{ \"from\": { \"time\":\"09:00\",\"to\":{ \"time\":\"18:00\",\"day\":0 } } }`\\n  9. `{ \"at\": { \"time\":\"08:30\",\"date\":\"2025/09/03\" } }`\\n  10. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"for\":{ \"hours\":2,\"minutes\":0,\"seconds\":0 } } }`\\n  11. `{ \"from\": { \"time\":\"08:30\",\"date\":\"2025/09/03\",\"to\":{ \"time\":\"17:00\",\"date\":\"2025/09/04\" } } }`\\n  12. `{ \"from\": { \"time\":\"22:00\",\"to\":{ \"time\":\"06:00\",\"day\":1 } } }`\\n  13. `{ \"weekly\": { \"days\":\"sun,mon,tue,wed,thu,fri,sat\",\"from\":{ \"time\":\"09:00\",\"to\":{ \"time\":\"17:00\" } } } }`\\n    - Alt weekly: use `\"for\": { \"hours\":2,\"minutes\":0,\"seconds\":0 }`\\n    - Days string lowercase, canonical, no spaces\\n  NOTE: The sunrise and sunset values are integer offsets in seconds from the event: negative = before, positive = after, 0 = exactly at the event.\\n\\n- Logical operators\\n{ \"and\": 1 }\\n{ \"or\": 1 }\\n{ \"(\": 1 }\\n{ \")\": 1 }\\nLogical operators mimic natural language flows and do not contain objects.\\nWrite logical operators exactly as:\\n{ \"(\": 1 } and { \")\": 1 }\\nDo not escape parentheses. Only escape double quotes where JSON requires it.\\n\\n- Mathematical operators\\nUse their natural language form: >, >=, <, <=, == (is or equals to), =! (is not)\\n\\nExamples:\\n\\n-- COS + Schedule + Price\\n\"if\": [\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"and\": 1 },\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n\"if\": [\\n  { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 350, \"uom\": \"33\", \"precision\": 2 } },\\n  { \"and\": 1 },\\n  { \"at\": { \"sunset\": 0 } },\\n  { \"or\": 1 },\\n  { \">=\": { \"device\": \"id_for_hvac\", \"status\": \"ST\", \"value\": 7000, \"uom\": \"17\", \"precision\": 2 } }\\n]\\n\\n-- Grouped COS + COC + Weekly\\n\"if\": [\\n  { \"(\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_1\", \"control\": \"DFON\" } },\\n    { \"or\": 1 },\\n    { \"==\": { \"device\": \"id_for_device_2\", \"control\": \"DON\" } },\\n  { \")\": 1 },\\n  { \"and\": 1 },\\n  { \"weekly\": { \"days\": \"mon,tue,wed,thu,fri\", \"from\": { \"time\": \"08:00\", \"to\": { \"time\": \"18:00\" } } } }\\n]\\n\\n-- Multiple Groups, Mixed Triggers\\n\"if\": [\\n  { \"(\": 1 },\\n    { \">\": { \"device\": \"id_for_thermostat_1\", \"status\": \"ST\", \"value\": 7500, \"uom\": \"17\", \"precision\": 2 } },\\n    { \"and\": 1 },\\n    { \"<\": { \"device\": \"id_for_price_sensor\", \"status\": \"ST\", \"value\": 250, \"uom\": \"33\", \"precision\": 2 } },\\n  { \")\": 1 },\\n  { \"or\": 1 },\\n  { \"at\": { \"sunrise\": 600 } },\\n  { \"or\": 1 },\\n  { \"IS\": { \"device\": \"fan\", \"control\": \"DFON\" } }\\n]\\n\\n---\\n\\n**Actions**\\n{\\n  \"device\":\"<device id>\",\\n  \"command\":\"<command name>\",\\n  \"parameters\":[\\n    { \"name\":\"<parameter name>\",\"value\":<a number>,\"uom\":\"<uom id>\",\"precision\":2 }\\n  ]\\n}\\n\\n\\n- Use device ID for device\\n- Use correct UOM ID for uom\\n- Commands must exist in device’s `accepts` list\\n- Use accurate ids, names, and precisions from DEVICE STRUCTURE\\n\\n---\\n\\n## CRITICAL RULES\\n\\n- Do provide reasoning, thinking, or any explanations **unless** otherwise requested\\n- Put reasoning inside the routine schema \\n- Do **not** guess, invent, or hallucinate IDs, parameters, units, or values.\\n- Only use what is explicitly defined in the DEVICE STRUCTURE.\\n- Remain minimal, structured, and consistent.\\n- All other answers must be short, factual, and grounded.\\n\\n---\"},\n  {\"role\":\"user\",\"content\":\"DEVICE STRUCTURE:\\n***Device***\nName: Matter Switch\nID: ZM00003_001_1\n  ***Properties***\n    Status [id=ST]\n      Enum [uom id=78]\n        Off [0]\n        On [100]\n        Unknown [101]\n    Responding [id=ERR]\n      Enum [uom id=25]\n        True [0]\n        False [1]\n  ***Accept Commands***\n    On [id=DON]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=51]\n    Off [id=DOF]\n    Toggle [id=TOGGLE]\n    Query [id=QUERY]***Device***\nName: Batmobile\nID: n007_controller\n  ***Properties***\n    Controller Connected [id=ST]\n      Enum [uom id=25]\n        Disconnected [0]\n        Connected [1]\n        Failed [2]\n        Connected [3]\n        Failed [4]\n    Console Display State [id=GV1]\n      Enum [uom id=25]\n        ChargeUnitUnknown [0]\n        Off [1]\n        Dim/Standby [2]\n        Accessory [3]\n        On [4]\n        Driving [5]\n        Charging [6]\n        Lock [7]\n        Sentry [8]\n        Dog [9]\n        Entertainment [10]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Homelink Nearby [id=GV2]\n      Enum [uom id=25]\n        False [0]\n        True [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Unknown [99]\n    Nbr Homelink devices reg'd [id=GV0]\n      Enum [uom id=25]\n        0 [0]\n        1 [1]\n        2 [2]\n        3 [3]\n        Data Invalid [97]\n        Not Enabled [98]\n        Unknown [99]\n    EV Door State [id=GV3]\n      Enum [uom id=25]\n        Unlocked [0]\n        Locked [1]\n        Data Invalid [97]\n        Unknown [99]\n    Odometer [id=GV4]\n      Enum [uom id=25]\n        No Value [0]\n        Unknown [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range 0 to 999999 Unit Kilometer [uom id=83]\n      Range 0 to 999999 Unit Miles [uom id=116]\n    Sentry Mode [id=GV5]\n      Enum [uom id=25]\n        Off [1]\n        Ideal [2]\n        Armed [3]\n        Aware [4]\n        Panic [5]\n        Quiet [6]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Front Driver Window [id=GV6]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Front Passenger Window [id=GV7]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Rear Driver Window [id=GV8]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Rear Passenger Window [id=GV9]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Trunk State [id=GV11]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Frunk State [id=GV12]\n      Enum [uom id=25]\n        Closed [0]\n        Open [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Located at Home [id=GV15]\n      Enum [uom id=25]\n        False [0]\n        True [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Unknown [99]\n    Located at Favorite [id=GV16]\n      Enum [uom id=25]\n        False [0]\n        True [1]\n        Data Invalid [97]\n        Not Enabled [98]\n        Unknown [99]\n    EV Longitude [id=GV17]\n      Enum [uom id=25]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range -180 to 180 Unit Raw [uom id=56]\n    EV Latitude [id=GV18]\n      Enum [uom id=25]\n        Data Invalid [97]\n        Not Enabled [98]\n        Not Reported [99]\n      Range -90 to 90 Unit Raw [uom id=56]\n    Tire Front Right [id=GV23]\n      Enum [uom id=25]\n      Range 0 to 145 Unit PSI [uom id=138]\n    Tire Front Left [id=GV24]\n      Enum [uom id=25]\n      Range 0 to 145 Unit PSI [uom id=138]\n    Tire Rear Right [id=GV25]\n      Enum [uom id=25]\n      Range 0 to 145 Unit PSI [uom id=138]\n    Tire Rear Left [id=GV26]\n      Enum [uom id=25]\n      Range 0 to 145 Unit PSI [uom id=138]\n    Last Command Status [id=GV21]\n      Enum [uom id=25]\n        OK [0]\n        API Overload [1]\n        Offline [2]\n        Error [3]\n        Cmd Failed [4]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Time of last car update [id=GV19]\n      Enum [uom id=25]\n        Unknown [99]\n      Range 1737400000 to 9999999999 Unit Unix Timestamp [uom id=151]\n    Connection Status [id=GV29]\n      Enum [uom id=25]\n        Not Receiving Data [0]\n        Receiving Data [1]\n        Data Invalid [97]\n        98\n        Unknown [99]\n    Stream Test [id=GV30]\n      Enum [uom id=25]\n        Not tested [0]\n        Testing... [1]\n        Success [2]\n  ***Accept Commands***\n    Honk Horn [id=HONKHORN]\n    Flash Lights [id=FLASHLIGHT]\n    Sentry Mode [id=SENTRYMODE]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Disable [0]\n            Enable [1]\n    Control Doors [id=DOORS]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Unlocked [0]\n            Locked [1]\n    Sunroof Control [id=SUNROOF]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Close [0]\n            Vent [1]\n    Actuate Trunk [id=TRUNK]\n    Actuate Frunk [id=FRUNK]\n    Toggle HomeLink [id=HOMELINK]\n    Play Sounds [id=PLAYSOUND]\n        Parameter 1: name=n/a [id=n/a]\n          Enum [uom id=25]\n            Random Fart [0]\n            Locate Ping [2000]\n    Test Connection [id=TESTCON]\n  ***Send Commands***\n    On [id=DON]\n    Off [id=DOF]\\n\\nUSER QUERY: <natural language request for automation and optimization>\"},\n  {\"role\":\"assistant\",\"content\":\"<ASSISTANT RESPONSE>\"}\n]}\n\nNow, analyze the content in system role above and DEVICE STRUCTURE in the user role above and generate a minimum of 3 samples: \nFor each sample:\n1. Generate a realistic natural language use case for automation and optimization that covers combinations of COS, COC, and Schedule\n2. Embed the use case in USER QUERY\n3. For the use case in the USER QUERY, create a routine that implements the use case with maximum accuracy \n4. Balance across multiple devices \n\n\n"}]}}
